{"version":3,"file":"background.js","sources":["webpack://crypto-explorer-extension/./src/utils/api.ts","webpack://crypto-explorer-extension/./src/utils/storage.ts","webpack://crypto-explorer-extension/webpack/bootstrap","webpack://crypto-explorer-extension/webpack/runtime/define property getters","webpack://crypto-explorer-extension/webpack/runtime/hasOwnProperty shorthand","webpack://crypto-explorer-extension/webpack/runtime/make namespace object","webpack://crypto-explorer-extension/./src/background/background.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst COINGECKO_COINS_LIST_API_KEY = 'https://api.coingecko.com/api/v3/coins/list';\nexport function fetchCoinsList() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = yield fetch(COINGECKO_COINS_LIST_API_KEY);\n        const data = yield res.json();\n        return data;\n    });\n}\n","export function setStoredCoins(coins) {\n    const vals = {\n        coins,\n    };\n    return new Promise((resolve) => {\n        chrome.storage.local.set(vals, () => {\n            resolve();\n        });\n    });\n}\nexport function getStoredCoins() {\n    const keys = ['coins'];\n    return new Promise((resolve) => {\n        chrome.storage.local.get(keys, (res) => {\n            var _a;\n            resolve((_a = res.coins) !== null && _a !== void 0 ? _a : []);\n        });\n    });\n}\nexport function setStoredTicker(ticker) {\n    return new Promise((resolve) => {\n        chrome.storage.local.set({ ticker: ticker }, function () {\n            console.log('Value is set to ' + ticker);\n            resolve();\n        });\n    });\n}\nexport function getStoredTicker() {\n    return new Promise((resolve) => {\n        chrome.storage.local.get(['ticker'], function (result) {\n            var _a;\n            console.log('Value currently is ' + result.ticker);\n            resolve((_a = result.ticker) !== null && _a !== void 0 ? _a : '');\n        });\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { fetchCoinsList } from '../utils/api';\nimport { setStoredCoins } from '../utils/storage';\nconsole.log('BACKGROUND script is running');\nchrome.runtime.onStartup.addListener(() => {\n    fetchCoinsList().then((data) => {\n        setStoredCoins(data);\n        console.log('Coins fetched');\n        console.log(data);\n    });\n});\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}